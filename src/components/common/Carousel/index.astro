---
import CarouselSlide from '../CarouselSlide.astro';
import Skeleton from './Skeleton.astro';
import './styles.css';

export interface Props {
  slides: Array<{
    desktop: string;
    mobile: string;
    alt: string;
    title: string;
    subtitle: string;
    link?: string;
  }>;
  loading?: boolean;
}

// Coerce incoming slides to a safe array to avoid `.map` on non-arrays
const { slides: rawSlides, loading = false } = Astro.props as { slides?: any; loading?: boolean };
const slides = Array.isArray(rawSlides) ? rawSlides : [];

// Log de depuración


// Identificar la primera imagen para cargarla con prioridad
const firstSlide = slides[0] || {};

// Log del primer slide


// Opcional: Precargar la primera imagen para mejorar el LCP
const preloadFirstImage = true && firstSlide.mobile && firstSlide.desktop;

---

<!-- Importar Swiper desde CDN para garantizar disponibilidad -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.css" />
<script is:inline src="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.js"></script>

<!-- Cargar scripts del carrusel solo en el cliente -->
<script is:inline define:vars={{ carouselSelector: '.swiper-container.main-carousel' }}>
  document.addEventListener('DOMContentLoaded', () => {
    setTimeout(() => {
      try {
        const swiper = new Swiper(carouselSelector, {
          loop: true,
          autoplay: {
            delay: 5000,
            disableOnInteraction: false,
          },
          navigation: {
            nextEl: '.swiper-button-next',
            prevEl: '.swiper-button-prev',
          },
          pagination: {
            el: '.swiper-pagination',
            clickable: true,
          },
          // Mejorar la respuesta táctil en móviles
          touchRatio: 1.5,
          touchAngle: 45,
          touchMoveStopPropagation: true,
          touchStartPreventDefault: false,
          touchStartForcePreventDefault: false,
          threshold: 5, // Umbral más bajo para detectar deslizamientos
          on: {
            init: function() {
              console.log('Swiper inicializado correctamente');
            }
          }
        });
        
        // Eliminar los event listeners adicionales para evitar conflictos
        // y dejar que Swiper maneje directamente los eventos táctiles
        
        window.addEventListener('load', () => swiper.update());
        
        // Asegurar que el swiper se actualice cuando cambie la orientación del dispositivo
        window.addEventListener('orientationchange', () => {
          setTimeout(() => swiper.update(), 200);
        });
      } catch (error) {
        console.error('Error al inicializar Swiper:', error);
      }
    }, 500);
  });
</script>

{loading ? (
  <Skeleton items={3} />
) : (
  <div class="relative overflow-hidden w-full mx-auto" transition:animate="fade">
    {preloadFirstImage && (
      <>
        <!-- Precargar la primera imagen para dispositivos móviles -->
        <link rel="preload" href={firstSlide.mobile} as="image" media="(max-width: 767px)">
        <!-- Precargar la primera imagen para escritorio -->
        <link rel="preload" href={firstSlide.desktop} as="image" media="(min-width: 768px)">
      </>
    )}
    
    <!-- Swiper container -->
    <div class="swiper-container main-carousel">
      <div class="swiper-wrapper">
        {slides.map((slide, index) => (
          <CarouselSlide 
            slide={{
              desktop: slide.desktop,
              mobile: slide.mobile,
              alt: slide.alt || 'Snacks Yummies',
              title: slide.title || '',
              subtitle: slide.subtitle || '',
              link: slide.link || ''
            }}
            priority={index === 0}
          />
        ))}
      </div>
      
      <!-- Controles de navegación -->
      <div class="swiper-button-next"></div>
      <div class="swiper-button-prev"></div>
      <div class="swiper-pagination"></div>
    </div>
  </div>
)}
