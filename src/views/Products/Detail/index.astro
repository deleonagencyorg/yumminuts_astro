---
// src/views/Products/Detail/index.astro
import { t } from '../../../i18n/i18n';
import type { Locale } from '../../../i18n/i18n';
import './styles.css';
import { initProductDetail } from './scripts.js';
import ProductsCarousel from '../../../components/common/ProductsCarousel/index.astro';
import LazyImage from '../../../components/common/LazyImage.astro';
import ProductImageCarousel from '../../../components/common/ProductImageCarousel/index.astro';


// Interfaces locales
interface ProductSize {
  value: string;
  image: string;
}

interface Stockist {
  id: string;
  name: string;
  icon: string;
  link: string;
}

interface Product {
  id: string;
  name: string;
  image: string;
  available?: string;
  background_image: string;
  background_color: string;
  header_text_color: string;
  color_button: string;
  sizes: ProductSize[];
  description?: string;
  short_description?: string;
  presentaciones?: Array<{
    value: string;
    icono: string;
  }>;
  // relatedProducts es opcional ya que no existe en la estructura actual
  relatedProducts?: string[];
  weight?: string[];
}

const { currentLang, productId } = Astro.props;

// Obtener datos desde traducciones
const productsAssets = t('home', { namespace: 'products', locale: currentLang }) || {};
const products = t('items', { namespace: 'products', locale: currentLang as Locale }) || [];
const stockists = t('stockist', { namespace: 'products', locale: currentLang as Locale }) || [];
const product = products.find((item: Product) => item.id === productId);
const brandsAssets = t('', { namespace: 'brands', locale: currentLang }) || {};
const newsAssets =  t('', { namespace: 'news', locale: currentLang }) || {};
const brandsList = brandsAssets.brands || [];
const zibasBrand = brandsList.find((brand: any) => brand.id === 'zibas');
const zibasProducts = (zibasBrand?.products || []).filter((product: any) => product.id !== productId);

// Si el producto no existe, lanzar error
if (!product || Object.keys(product).length === 0) {
  throw new Error(t('errors.product_not_found', { locale: currentLang }));
}

// Asegurar que todas las propiedades necesarias existan
const safeProduct: Product = {
  id: product.id || '',
  name: product.name || '',
  image: product.image || '',
  background_image: product.background_color || '',
  background_color: product.background_color || '',
  header_text_color: product.header_text_color || '#000000',
  color_button: product.color_button || '#000000',
  sizes: Array.isArray(product.sizes) ? product.sizes : [],
  available: product.available || '',
  description: product.description || '',
  weight: Array.isArray(product.weight) ? product.weight : [],
  
};

// Obtener todos los productos como un array
const productsData = t('items', { locale: currentLang, namespace: 'products' }) || [];
const allProductsArray = Array.isArray(productsData) ? productsData : [];

// Filtrar productos relacionados - simplificado para evitar errores
let relatedProducts: any[] = [];
// Solo usar productos de la misma categoría si hay más de 1 producto
if (allProductsArray.length > 1) {
  relatedProducts = allProductsArray
    .filter((p: any) => p.id !== productId)
    .slice(0, 3);
}

// Preparar imágenes para el carousel (usando la imagen principal y variaciones)
const carouselImages = [
  safeProduct.image,
  // Para demo, duplicamos la imagen. En producción, estas serían diferentes vistas del producto
  safeProduct.image,
  safeProduct.image,
  safeProduct.image,
  safeProduct.image
];


---

{safeProduct.background_color && (
  <article id="product-detail" class="product-detail pt-12 md:pt-29 pb-32 md:bg-[image:var(--desktop-bg)] bg-cover bg-center bg-[var(--mobile-bg)] relative" 
    style={`
      --mobile-bg: ${safeProduct.background_color};
      --desktop-bg: url('${safeProduct.background_color}');
    `}
    transition:animate="slide"
  >
    <div class="md:mt-[0] container mx-auto px-6 py-5 flex flex-col md:flex-row gap-5">
      {/* Product Image Carousel */}
      <div class="hidden md:flex md:flex-col md:justify-start md:items-center md:pr-4">
        <ProductImageCarousel 
          images={carouselImages}
          productName={safeProduct.name}
          activeImageIndex={0}
          className="max-h-[605px] overflow-y-auto"
        />
      </div>
      
      {/* Contenedor de la imagen del lado izquierdo */}
      <div class="relative flex justify-center items-center w-full md:w-[605px] p-4 md:px-28 md:py-16 rounded-[85px] gap-2 cursor-pointer overflow-hidden group" style={{ backgroundColor: safeProduct.color_button }}>
        {/* Overlay para el efecto de oscurecimiento */}
        <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-all duration-300 rounded-[85px]"></div>
        <img id="product-image" class="relative z-10 max-w-full h-auto transition-transform duration-300 group-hover:scale-110" src={safeProduct.image} alt={safeProduct.name} transition:name={`product-image-${safeProduct.id}`} />
      </div>
      
      {/* Contenido del lado derecho */}
      <div class="w-full md:w-1/2 md:h-[605px] h-auto">
        <div class="flex justify-between items-center mb-6">
          <h1 class="md:text-6xl text-6xl font-bold uppercase italic" style={{ color: safeProduct.header_text_color }}>{safeProduct.name}</h1>
          <a 
            href="#" 
            class="flex h-[54px] justify-center items-center gap-[10px] px-10 py-5 rounded-[47px] border whitespace-nowrap uppercase italic font-title text-xl font-medium"
            style={{ color: safeProduct.header_text_color, borderColor: safeProduct.header_text_color, backgroundColor: safeProduct.color_button }}
          >
            {currentLang === 'es' ? 'ENCUÉNTRALO' : 'FIND IT'}
          </a>
        </div>
        <h1 
          class="uppercase italic font-title md:text-4xl text-xl  font-medium text-[${safeProduct.header_text_color}] py-4"
          style={{ color: safeProduct.header_text_color }}>
         {currentLang === 'es' ? 'DESCRIPCIÓN' : 'DESCRIPTION'}
        </h1>
        <h2 
          class=" md:text-3xl text-2xl italic font-text font-medium gap-30 py-5"
          style={{ color: safeProduct.header_text_color }}
        >
            {safeProduct.description}
        </h2>

        <h1 
          class="uppercase italic font-title md:text-4xl text-xl  font-medium text-[${safeProduct.header_text_color}] py-4"
          style={{ color: safeProduct.header_text_color }}>
          {currentLang === 'es' ? 'PRESENTACIONES' : 'PRESENTATIONS'}
        </h1>
        <h2 
          class=" md:text-3xl text-2xl italic font-text font-medium py-5"
          style={{ color: safeProduct.header_text_color }}
        >
            {currentLang === 'es' ? 'Tamaño por presentación varía de acuerdo al país.​' : 'The size of the presentation varies according to the country.'}
        </h2>

        {safeProduct.weight && safeProduct.weight.length > 0 && (
          <div class="flex flex-wrap gap-2 my-4">
            {safeProduct.weight.map((weight, index) => (
              <div class="flex flex-col items-center">
                <span class="flex h-[75px] px-[35px] py-4 flex-col justify-center items-center gap-2 flex-1 rounded-[15px] border text-lg md:text-xl font-bold" style={{ color: safeProduct.header_text_color, borderColor: safeProduct.header_text_color, backgroundColor: safeProduct.color_button }}>{weight}</span>
              </div>
            ))}
          </div>
        )}

        {/* Sección de Stockists */}
        {stockists && stockists.length > 0 && (
          <div class="stockists-section mt-8 mb-16">
            <h1 
              class="uppercase italic font-title md:text-4xl text-xl font-medium py-4"
              style={{ color: safeProduct.header_text_color }}>
              {currentLang === 'es' ? productsAssets.product_available || 'DISPONIBLE EN' : 'AVAILABLE AT'}
            </h1>
            <div class="flex flex-wrap gap-4 my-4 mb-8">
              {stockists.map((stockist: Stockist) => (
                <div 
                  class="flex items-center justify-center h-[100px] w-[100px] p-2 rounded-[15px] border hover:scale-105 transition-transform"
                  style={{ borderColor: safeProduct.header_text_color, backgroundColor: safeProduct.color_button }}
                >
                  <a href={stockist.link} target="_blank" rel="noopener noreferrer">  
                  <LazyImage
                    src={stockist.icon} 
                    alt={stockist.name}
                    color={safeProduct.background_color==='#FDE820'?'black':'white'}
                    class="w-full h-full object-contain"
                    title={stockist.name}
                  />
                  </a>
                </div>
              ))}
            </div>
          </div>
        )}
     
      </div>
    </div>
  </article>
)}
<!-- Sección de Productos Zibas -->
    {products.length > 0 && (
      <section class="w-full py-16 bg-blue">
        <div class="container mx-auto px-4">
          {brandsAssets.home?.title && (
          <div class="text-center mb-8 relative z-20" >
            <h2 class="text-3xl md:text-4xl italic font-bold mb-4" style={`color: white`}>
              {brandsAssets.home?.title}
            </h2>
            {brandsAssets.home?.subtitle && (
              <h1 class="text-6xl md:text-9xl italic font-bold mb-4" style={`color: white`}>
                {brandsAssets.home?.subtitle}
              </h1>
            )}
          </div>
        )}
          <ProductsCarousel 
            products={products}
            color={'white'}
            autoplay={true}
            speed={4000}
            slidesPerView={3}
            spaceBetween={30}
            loop={true}
            className="max-w-7xl mx-auto"
          />
        </div>
      </section>
    )}
<script>
  // Este script se ejecuta solo en el navegador
  import { initProductDetail } from './scripts.js';
  document.addEventListener('DOMContentLoaded', () => {
    initProductDetail();
  });
</script>
