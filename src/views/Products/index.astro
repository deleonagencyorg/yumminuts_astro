---
// src/components/pages/ProductsPage.astro
import { t } from '../../i18n/i18n';
import type { Locale } from '../../i18n/i18n';
import { getLocale } from '../../i18n/i18n';
import './styles.css';
import Carousel from '../../components/common/Carousel/index.astro';
import ProductsWithFilter from '../../components/common/ProductsWithFilter/index.astro';
import Discover from '../../components/common/Discover/index.astro';



const currentLang = getLocale();
const products = t('items', { namespace: 'products', locale: currentLang });
const categories = t('categories', { namespace: 'products', locale: currentLang });
const commonAssets = t('assets.slider', { namespace: 'common', locale: currentLang }) || [];
const slides = Array.isArray(commonAssets) 
  ? commonAssets
    .filter(asset => asset && typeof asset === 'object' && asset.desktop && asset.mobile)
    .map(asset => ({
      desktop: asset.desktop,
      mobile: asset.mobile,
      alt: asset.alt || "Ziba's",
      title: asset.title || '',
      subtitle: asset.description || '',
      link: asset.url || asset.link || ''
    }))
  : [];
const discoverAssets = t('discover', { namespace: 'common', locale: currentLang }) || {};

// Obtener categorías únicas de los productos
const uniqueCategories = Object.keys(categories);
---

<main class="w-full flex flex-col items-center justify-center mt-0">
  <!-- Slider Section con máscara -->
    <div class="relative w-full overflow-hidden max-w-[100vw] h-auto aspect-[1/1] md:aspect-[21/9] lg:h-[66vh]">
     

      <div class="relative z-0 w-full md:w-[100%] md:ml-auto md:h-full h-[72vh] md:flex md:items-center md:justify-center">
        <Carousel slides={slides} />
      </div>
    </div>

    <!-- New Products with Filter Component -->
    <ProductsWithFilter title="Nuestros Productos" />

    <section id="discover" class="w-full bg-white py-16">
      <Discover title={discoverAssets.title} images={discoverAssets.images || []} />
    </section>
</main>

<script>
  // Fix para las imágenes que no cargan
document.addEventListener('DOMContentLoaded', () => {
  const images = document.querySelectorAll('img');
  images.forEach(img => {
    img.addEventListener('error', function() {
      this.src = '/images/products/placeholder.jpg';
    });
  });
  
  // Filtro de categorías
  const filterButtons = document.querySelectorAll('.category-filter');
  const productCards = document.querySelectorAll('.product-card');
  
  filterButtons.forEach(button => {
    button.addEventListener('click', () => {
      // Actualizar estado activo de los botones
      filterButtons.forEach(btn => btn.classList.remove('active'));
      button.classList.add('active');
      
      const category = button.getAttribute('data-category');
      
      // Filtrar productos
      productCards.forEach(card => {
        const cardElement = card as HTMLElement;
        if (category === 'all' || card.getAttribute('data-category') === category) {
          cardElement.style.display = 'block';
        } else {
          cardElement.style.display = 'none';
        }
      });
    });
  });
});
</script>

